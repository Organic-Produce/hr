input {
  file {
    path => "/var/log/syslog"
    type => "syslog"
    sincedb_path => "/home/logstash"
  }
  file {
    path => "/var/log/uwsgi.log"
    start_position => beginning
    sincedb_path => "/home/logstash"
  }
}

{% raw %}filter {
  if [path] =~ "uwsgi" {
    grok {
      match => { "message" => "\[pid: %{NUMBER}\|app: %{NUMBER}\|req: %{NUMBER}/%{NUMBER}\] %{IP} \(\) \{%{NUMBER} vars in %{NUMBER} bytes\} %{SYSLOG5424SD:DATE} %{WORD} %{URIPATHPARAM} \=\> generated %{NUMBER} bytes in %{NUMBER} msecs \(HTTP/1.0 %{NUMBER}\) %{NUMBER} headers in %{NUMBER}" }
    }
    date {
      match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    kv {
      field_split => "&? "
      include_keys => [ "file_name", "device_id", "lang", "country"]
    }
  }
  if [type] == "syslog" {
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
      add_field => [ "received_at", "%{@timestamp}" ]
      add_field => [ "received_from", "%{host}" ]
    }
    syslog_pri { }
    date {
      match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
    }
  }
}{% endraw %}

output {
  stdout { 
    debug => true
  }
  elasticsearch_http { 
    host => '{{ pillar['elasticsearch']['host'] }}'
  }
}
